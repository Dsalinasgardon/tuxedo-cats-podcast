[{"D:\\Code\\sanity-podcast-app\\web\\pages\\about.js":"1","D:\\Code\\sanity-podcast-app\\web\\pages\\episodes\\[slug].js":"2","D:\\Code\\sanity-podcast-app\\web\\pages\\index.js":"3"},{"size":126,"mtime":1654706479073,"results":"4","hashOfConfig":"5"},{"size":1299,"mtime":1655214948014,"results":"6","hashOfConfig":"5"},{"size":1303,"mtime":1655157975616,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"1utf53d",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":7,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\Code\\sanity-podcast-app\\web\\pages\\about.js",["20","21"],[],"const about = () => {\r\n    return (\r\n      <div>\r\n        <p>Hello world!</p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default about;","D:\\Code\\sanity-podcast-app\\web\\pages\\episodes\\[slug].js",["22","23","24","25","26","27","28","29"],[],"import sanityClient from '@sanity/client'\r\nconst client = sanityClient({\r\n  projectId: '7yydvelu',\r\n  dataset: 'production',\r\n  apiVersion: '2022-06-01', \r\n  useCdn: true\r\n})\r\n\r\nconst episode = props => {\r\n  return (\r\n    <div>\r\n      <img src = {props.episode.coverArt.url+\"?w=200\"} />  \r\n      <h1>{props.episode.title}</h1>\r\n      <h2>{props.episode.description}</h2>\r\n      <p>{props.episode.summary}</p>\r\n      <audio controls> \r\n       <source src = {props.episode.file.url} />\r\n      </audio>\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\nexport async function getStaticPaths () {\r\n  const pagedata = await client.fetch(`\r\n    *[ _type == \"episode\"] {\"slug\": slug.current}\r\n\r\n  `)\r\n  const paths = pagedata.map(episode => ({ params: { slug: episode.slug } }))\r\n\r\n  return { paths, fallback: false }\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const slug = params.slug\r\n  const pagedata = await client.fetch(`\r\n  *[ _type == \"episode\" && slug.current match $slug ] [0] { \r\n    ..., \r\n  coverArt {\r\n   \"url\":asset->.url}\r\n   { \r\n    ..., \r\n  file {\r\n   \"url\":asset->.url}\r\n  },\r\n  \r\n}\r\n\r\n  `, { slug }\r\n  )\r\n\r\n  console.log(pagedata)\r\n\r\n  if (!pagedata) {\r\n    return { notFound: true }\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      episode: pagedata\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nexport default episode\r\n","D:\\Code\\sanity-podcast-app\\web\\pages\\index.js",["30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],[],"import Link from 'next/link'\r\nimport groq from 'groq'\r\nimport sanityClient from '@sanity/client'\r\nconst client = sanityClient({\r\n  projectId: '7yydvelu',\r\n  dataset: 'production',\r\n  apiVersion: '2022-06-01',\r\n  useCdn: true\r\n})\r\n\r\nconst Index = ({ episodes, podcast }) => {\r\n  return (\r\n    <div>\r\n      <h1>{podcast.title}</h1>\r\n      <p>{podcast.description}</p>\r\n      <img src= {podcast.coverArt.url+\"?w=200\"}/> \r\n      {episodes.length > 0 && episodes.map(\r\n        ({ _id, title = 'Tuxedo cats are so beautiful', slug = '', publishedAt = '2022-06-08' }) =>\r\n          slug && (\r\n            <li key={_id}>\r\n              <Link href=\"/episodes/[slug]\" as={`/episodes/${slug.current}`}>\r\n                <a>{title}</a>\r\n              </Link>{' '}\r\n              ({new Date(publishedAt).toDateString()})\r\n            </li>\r\n          )\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const pagedata = await client.fetch(groq`{\r\n    \"podcast\": *[_id == \"697e74b0-6760-4235-95ef-55cec9db9466\"] [0] {\r\n    ...,\r\n    coverArt {\r\n     \"url\":asset->.url}},\r\n     \r\n     \"episodes\": *[_type == \"episode\" && schedule.publish  < now()] | order(schedule.publish desc) \r\n    }\r\n    `)\r\n  console.log(pagedata)\r\n  return {\r\n    props:\r\n      pagedata\r\n  }\r\n}\r\n\r\nexport default Index",{"ruleId":"46","severity":2,"message":"47","line":3,"column":7,"nodeType":"48","messageId":"49","endLine":3,"endColumn":12},{"ruleId":"46","severity":2,"message":"47","line":4,"column":9,"nodeType":"48","messageId":"49","endLine":4,"endColumn":12},{"ruleId":"46","severity":2,"message":"47","line":11,"column":5,"nodeType":"48","messageId":"49","endLine":11,"endColumn":10},{"ruleId":"46","severity":2,"message":"47","line":12,"column":7,"nodeType":"48","messageId":"49","endLine":12,"endColumn":58},{"ruleId":"50","severity":1,"message":"51","line":12,"column":7,"nodeType":"48","endLine":12,"endColumn":58},{"ruleId":"46","severity":2,"message":"47","line":13,"column":7,"nodeType":"48","messageId":"49","endLine":13,"endColumn":11},{"ruleId":"46","severity":2,"message":"47","line":14,"column":7,"nodeType":"48","messageId":"49","endLine":14,"endColumn":11},{"ruleId":"46","severity":2,"message":"47","line":15,"column":7,"nodeType":"48","messageId":"49","endLine":15,"endColumn":10},{"ruleId":"46","severity":2,"message":"47","line":16,"column":7,"nodeType":"48","messageId":"49","endLine":16,"endColumn":23},{"ruleId":"46","severity":2,"message":"47","line":17,"column":8,"nodeType":"48","messageId":"49","endLine":17,"endColumn":49},{"ruleId":"52","severity":1,"message":"53","line":11,"column":18,"nodeType":"54","messageId":"55","endLine":11,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":11,"column":28,"nodeType":"54","messageId":"55","endLine":11,"endColumn":35},{"ruleId":"46","severity":2,"message":"47","line":13,"column":5,"nodeType":"48","messageId":"49","endLine":13,"endColumn":10},{"ruleId":"46","severity":2,"message":"47","line":14,"column":7,"nodeType":"48","messageId":"49","endLine":14,"endColumn":11},{"ruleId":"52","severity":1,"message":"57","line":14,"column":20,"nodeType":"58","messageId":"55","endLine":14,"endColumn":25},{"ruleId":"46","severity":2,"message":"47","line":15,"column":7,"nodeType":"48","messageId":"49","endLine":15,"endColumn":10},{"ruleId":"52","severity":1,"message":"59","line":15,"column":19,"nodeType":"58","messageId":"55","endLine":15,"endColumn":30},{"ruleId":"46","severity":2,"message":"47","line":16,"column":7,"nodeType":"48","messageId":"49","endLine":16,"endColumn":50},{"ruleId":"50","severity":1,"message":"51","line":16,"column":7,"nodeType":"48","endLine":16,"endColumn":50},{"ruleId":"52","severity":1,"message":"60","line":16,"column":26,"nodeType":"58","messageId":"55","endLine":16,"endColumn":34},{"ruleId":"52","severity":1,"message":"61","line":16,"column":35,"nodeType":"58","messageId":"55","endLine":16,"endColumn":38},{"ruleId":"52","severity":1,"message":"62","line":17,"column":17,"nodeType":"58","messageId":"55","endLine":17,"endColumn":23},{"ruleId":"52","severity":1,"message":"63","line":17,"column":40,"nodeType":"58","messageId":"55","endLine":17,"endColumn":43},{"ruleId":"46","severity":2,"message":"47","line":20,"column":13,"nodeType":"48","messageId":"49","endLine":20,"endColumn":27},{"ruleId":"46","severity":2,"message":"47","line":21,"column":15,"nodeType":"48","messageId":"49","endLine":21,"endColumn":78},{"ruleId":"46","severity":2,"message":"47","line":22,"column":17,"nodeType":"48","messageId":"49","endLine":22,"endColumn":20},"react/react-in-jsx-scope","'React' must be in scope when using JSX","JSXOpeningElement","notInScope","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/prop-types","'episodes' is missing in props validation","Property","missingPropType","'podcast' is missing in props validation","'podcast.title' is missing in props validation","Identifier","'podcast.description' is missing in props validation","'podcast.coverArt' is missing in props validation","'podcast.coverArt.url' is missing in props validation","'episodes.length' is missing in props validation","'episodes.map' is missing in props validation"]